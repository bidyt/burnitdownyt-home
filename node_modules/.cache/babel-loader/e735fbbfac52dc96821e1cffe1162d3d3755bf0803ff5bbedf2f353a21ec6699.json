{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst names_1 = require(\"./names\");\nexports.keywordError = {\n  message: ({\n    keyword\n  }) => codegen_1.str`should pass \"${keyword}\" keyword validation`\n};\nexports.keyword$DataError = {\n  message: ({\n    keyword,\n    schemaType\n  }) => schemaType ? codegen_1.str`\"${keyword}\" keyword must be ${schemaType} ($data)` : codegen_1.str`\"${keyword}\" keyword is invalid ($data)`\n};\nfunction reportError(cxt, error = exports.keywordError, overrideAllErrors) {\n  const {\n    it\n  } = cxt;\n  const {\n    gen,\n    compositeRule,\n    allErrors\n  } = it;\n  const errObj = errorObjectCode(cxt, error);\n  if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : compositeRule || allErrors) {\n    addError(gen, errObj);\n  } else {\n    returnErrors(it, codegen_1._`[${errObj}]`);\n  }\n}\nexports.reportError = reportError;\nfunction reportExtraError(cxt, error = exports.keywordError) {\n  const {\n    it\n  } = cxt;\n  const {\n    gen,\n    compositeRule,\n    allErrors\n  } = it;\n  const errObj = errorObjectCode(cxt, error);\n  addError(gen, errObj);\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, names_1.default.vErrors);\n  }\n}\nexports.reportExtraError = reportExtraError;\nfunction resetErrorsCount(gen, errsCount) {\n  gen.assign(names_1.default.errors, errsCount);\n  gen.if(codegen_1._`${names_1.default.vErrors} !== null`, () => gen.if(errsCount, () => gen.assign(codegen_1._`${names_1.default.vErrors}.length`, errsCount), () => gen.assign(names_1.default.vErrors, null)));\n}\nexports.resetErrorsCount = resetErrorsCount;\nfunction extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it\n}) {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\");\n  const err = gen.name(\"err\");\n  gen.forRange(\"i\", errsCount, names_1.default.errors, i => {\n    gen.const(err, codegen_1._`${names_1.default.vErrors}[${i}]`);\n    gen.if(codegen_1._`${err}.dataPath === undefined`, () => gen.assign(codegen_1._`${err}.dataPath`, codegen_1.strConcat(names_1.default.dataPath, it.errorPath)));\n    gen.assign(codegen_1._`${err}.schemaPath`, codegen_1.str`${it.errSchemaPath}/${keyword}`);\n    if (it.opts.verbose) {\n      gen.assign(codegen_1._`${err}.schema`, schemaValue);\n      gen.assign(codegen_1._`${err}.data`, data);\n    }\n  });\n}\nexports.extendErrors = extendErrors;\nfunction addError(gen, errObj) {\n  const err = gen.const(\"err\", errObj);\n  gen.if(codegen_1._`${names_1.default.vErrors} === null`, () => gen.assign(names_1.default.vErrors, codegen_1._`[${err}]`), codegen_1._`${names_1.default.vErrors}.push(${err})`);\n  gen.code(codegen_1._`${names_1.default.errors}++`);\n}\nfunction returnErrors(it, errs) {\n  const {\n    gen,\n    validateName,\n    schemaEnv\n  } = it;\n  if (schemaEnv.$async) {\n    gen.throw(codegen_1._`new ${it.ValidationError}(${errs})`);\n  } else {\n    gen.assign(codegen_1._`${validateName}.errors`, errs);\n    gen.return(false);\n  }\n}\nconst E = {\n  keyword: new codegen_1.Name(\"keyword\"),\n  schemaPath: new codegen_1.Name(\"schemaPath\"),\n  params: new codegen_1.Name(\"params\"),\n  propertyName: new codegen_1.Name(\"propertyName\"),\n  message: new codegen_1.Name(\"message\"),\n  schema: new codegen_1.Name(\"schema\"),\n  parentSchema: new codegen_1.Name(\"parentSchema\"),\n  // JTD error properties\n  instancePath: new codegen_1.Name(\"instancePath\")\n};\nfunction errorObjectCode(cxt, error) {\n  const {\n    createErrors,\n    opts\n  } = cxt.it;\n  if (createErrors === false) return codegen_1._`{}`;\n  return (opts.jtd && !opts.ajvErrors ? jtdErrorObject : ajvErrorObject)(cxt, error);\n}\nfunction jtdErrorObject(cxt, {\n  message\n}) {\n  const {\n    gen,\n    keyword,\n    it\n  } = cxt;\n  const {\n    errorPath,\n    errSchemaPath,\n    opts\n  } = it;\n  const keyValues = [[E.instancePath, codegen_1.strConcat(names_1.default.dataPath, errorPath)], [E.schemaPath, codegen_1.str`${errSchemaPath}/${keyword}`]];\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message]);\n  }\n  return gen.object(...keyValues);\n}\nfunction ajvErrorObject(cxt, error) {\n  const {\n    gen,\n    keyword,\n    data,\n    schemaValue,\n    it\n  } = cxt;\n  const {\n    topSchemaRef,\n    schemaPath,\n    errorPath,\n    errSchemaPath,\n    propertyName,\n    opts\n  } = it;\n  const {\n    params,\n    message\n  } = error;\n  const keyValues = [[E.keyword, keyword], [names_1.default.dataPath, codegen_1.strConcat(names_1.default.dataPath, errorPath)], [E.schemaPath, codegen_1.str`${errSchemaPath}/${keyword}`], [E.params, typeof params == \"function\" ? params(cxt) : params || codegen_1._`{}`]];\n  if (propertyName) keyValues.push([E.propertyName, propertyName]);\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message]);\n  }\n  if (opts.verbose) {\n    keyValues.push([E.schema, schemaValue], [E.parentSchema, codegen_1._`${topSchemaRef}${schemaPath}`], [names_1.default.data, data]);\n  }\n  return gen.object(...keyValues);\n}","map":{"version":3,"names":["codegen_1","require","names_1","exports","keywordError","message","keyword","str","keyword$DataError","schemaType","reportError","cxt","error","overrideAllErrors","it","gen","compositeRule","allErrors","errObj","errorObjectCode","addError","returnErrors","_","reportExtraError","default","vErrors","resetErrorsCount","errsCount","assign","errors","if","extendErrors","schemaValue","data","undefined","Error","err","name","forRange","i","const","strConcat","dataPath","errorPath","errSchemaPath","opts","verbose","code","errs","validateName","schemaEnv","$async","throw","ValidationError","return","E","Name","schemaPath","params","propertyName","schema","parentSchema","instancePath","createErrors","jtd","ajvErrors","jtdErrorObject","ajvErrorObject","keyValues","messages","push","object","topSchemaRef"],"sources":["C:\\Users\\obaid\\Work Projects\\BID\\node_modules\\ajv\\lib\\compile\\errors.ts"],"sourcesContent":["import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`should pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.dataPath === undefined`, () =>\n      gen.assign(_`${err}.dataPath`, strConcat(N.dataPath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n  // JTD error properties\n  instancePath: new Name(\"instancePath\"),\n}\n\nfunction errorObjectCode(cxt: KeywordErrorCxt, error: KeywordErrorDefinition): Code {\n  const {createErrors, opts} = cxt.it\n  if (createErrors === false) return _`{}`\n  return (opts.jtd && !opts.ajvErrors ? jtdErrorObject : ajvErrorObject)(cxt, error)\n}\n\nfunction jtdErrorObject(cxt: KeywordErrorCxt, {message}: KeywordErrorDefinition): Code {\n  const {gen, keyword, it} = cxt\n  const {errorPath, errSchemaPath, opts} = it\n  const keyValues: [Name, SafeExpr | string][] = [\n    [E.instancePath, strConcat(N.dataPath, errorPath)],\n    [E.schemaPath, str`${errSchemaPath}/${keyword}`],\n  ]\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  return gen.object(...keyValues)\n}\n\nfunction ajvErrorObject(cxt: KeywordErrorCxt, error: KeywordErrorDefinition): Code {\n  const {gen, keyword, data, schemaValue, it} = cxt\n  const {topSchemaRef, schemaPath, errorPath, errSchemaPath, propertyName, opts} = it\n  const {params, message} = error\n  const keyValues: [Name, SafeExpr | string][] = [\n    [E.keyword, keyword],\n    [N.dataPath, strConcat(N.dataPath, errorPath)],\n    [E.schemaPath, str`${errSchemaPath}/${keyword}`],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`],\n  ]\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  return gen.object(...keyValues)\n}\n"],"mappings":";;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AAEA,MAAAC,OAAA,GAAAD,OAAA;AAEaE,OAAA,CAAAC,YAAY,GAA2B;EAClDC,OAAO,EAAEA,CAAC;IAACC;EAAO,CAAC,KAAKN,SAAA,CAAAO,GAAG,gBAAgBD,OAAO;CACnD;AAEYH,OAAA,CAAAK,iBAAiB,GAA2B;EACvDH,OAAO,EAAEA,CAAC;IAACC,OAAO;IAAEG;EAAU,CAAC,KAC7BA,UAAU,GACNT,SAAA,CAAAO,GAAG,IAAID,OAAO,qBAAqBG,UAAU,UAAU,GACvDT,SAAA,CAAAO,GAAG,IAAID,OAAO;CACrB;AAED,SAAgBI,WAAWA,CACzBC,GAAoB,EACpBC,KAAA,GAAgCT,OAAA,CAAAC,YAAY,EAC5CS,iBAA2B;EAE3B,MAAM;IAACC;EAAE,CAAC,GAAGH,GAAG;EAChB,MAAM;IAACI,GAAG;IAAEC,aAAa;IAAEC;EAAS,CAAC,GAAGH,EAAE;EAC1C,MAAMI,MAAM,GAAGC,eAAe,CAACR,GAAG,EAAEC,KAAK,CAAC;EAC1C,IAAIC,iBAAiB,aAAjBA,iBAAiB,cAAjBA,iBAAiB,GAAKG,aAAa,IAAIC,SAAU,EAAE;IACrDG,QAAQ,CAACL,GAAG,EAAEG,MAAM,CAAC;GACtB,MAAM;IACLG,YAAY,CAACP,EAAE,EAAEd,SAAA,CAAAsB,CAAC,IAAIJ,MAAM,GAAG,CAAC;;AAEpC;AAbAf,OAAA,CAAAO,WAAA,GAAAA,WAAA;AAeA,SAAgBa,gBAAgBA,CAC9BZ,GAAoB,EACpBC,KAAA,GAAgCT,OAAA,CAAAC,YAAY;EAE5C,MAAM;IAACU;EAAE,CAAC,GAAGH,GAAG;EAChB,MAAM;IAACI,GAAG;IAAEC,aAAa;IAAEC;EAAS,CAAC,GAAGH,EAAE;EAC1C,MAAMI,MAAM,GAAGC,eAAe,CAACR,GAAG,EAAEC,KAAK,CAAC;EAC1CQ,QAAQ,CAACL,GAAG,EAAEG,MAAM,CAAC;EACrB,IAAI,EAAEF,aAAa,IAAIC,SAAS,CAAC,EAAE;IACjCI,YAAY,CAACP,EAAE,EAAEZ,OAAA,CAAAsB,OAAC,CAACC,OAAO,CAAC;;AAE/B;AAXAtB,OAAA,CAAAoB,gBAAA,GAAAA,gBAAA;AAaA,SAAgBG,gBAAgBA,CAACX,GAAY,EAAEY,SAAe;EAC5DZ,GAAG,CAACa,MAAM,CAAC1B,OAAA,CAAAsB,OAAC,CAACK,MAAM,EAAEF,SAAS,CAAC;EAC/BZ,GAAG,CAACe,EAAE,CAAC9B,SAAA,CAAAsB,CAAC,GAAGpB,OAAA,CAAAsB,OAAC,CAACC,OAAO,WAAW,EAAE,MAC/BV,GAAG,CAACe,EAAE,CACJH,SAAS,EACT,MAAMZ,GAAG,CAACa,MAAM,CAAC5B,SAAA,CAAAsB,CAAC,GAAGpB,OAAA,CAAAsB,OAAC,CAACC,OAAO,SAAS,EAAEE,SAAS,CAAC,EACnD,MAAMZ,GAAG,CAACa,MAAM,CAAC1B,OAAA,CAAAsB,OAAC,CAACC,OAAO,EAAE,IAAI,CAAC,CAClC,CACF;AACH;AATAtB,OAAA,CAAAuB,gBAAA,GAAAA,gBAAA;AAWA,SAAgBK,YAAYA,CAAC;EAC3BhB,GAAG;EACHT,OAAO;EACP0B,WAAW;EACXC,IAAI;EACJN,SAAS;EACTb;AAAE,CACc;EAChB;EACA,IAAIa,SAAS,KAAKO,SAAS,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxE,MAAMC,GAAG,GAAGrB,GAAG,CAACsB,IAAI,CAAC,KAAK,CAAC;EAC3BtB,GAAG,CAACuB,QAAQ,CAAC,GAAG,EAAEX,SAAS,EAAEzB,OAAA,CAAAsB,OAAC,CAACK,MAAM,EAAGU,CAAC,IAAI;IAC3CxB,GAAG,CAACyB,KAAK,CAACJ,GAAG,EAAEpC,SAAA,CAAAsB,CAAC,GAAGpB,OAAA,CAAAsB,OAAC,CAACC,OAAO,IAAIc,CAAC,GAAG,CAAC;IACrCxB,GAAG,CAACe,EAAE,CAAC9B,SAAA,CAAAsB,CAAC,GAAGc,GAAG,yBAAyB,EAAE,MACvCrB,GAAG,CAACa,MAAM,CAAC5B,SAAA,CAAAsB,CAAC,GAAGc,GAAG,WAAW,EAAEpC,SAAA,CAAAyC,SAAS,CAACvC,OAAA,CAAAsB,OAAC,CAACkB,QAAQ,EAAE5B,EAAE,CAAC6B,SAAS,CAAC,CAAC,CACpE;IACD5B,GAAG,CAACa,MAAM,CAAC5B,SAAA,CAAAsB,CAAC,GAAGc,GAAG,aAAa,EAAEpC,SAAA,CAAAO,GAAG,GAAGO,EAAE,CAAC8B,aAAa,IAAItC,OAAO,EAAE,CAAC;IACrE,IAAIQ,EAAE,CAAC+B,IAAI,CAACC,OAAO,EAAE;MACnB/B,GAAG,CAACa,MAAM,CAAC5B,SAAA,CAAAsB,CAAC,GAAGc,GAAG,SAAS,EAAEJ,WAAW,CAAC;MACzCjB,GAAG,CAACa,MAAM,CAAC5B,SAAA,CAAAsB,CAAC,GAAGc,GAAG,OAAO,EAAEH,IAAI,CAAC;;EAEpC,CAAC,CAAC;AACJ;AAtBA9B,OAAA,CAAA4B,YAAA,GAAAA,YAAA;AAwBA,SAASX,QAAQA,CAACL,GAAY,EAAEG,MAAY;EAC1C,MAAMkB,GAAG,GAAGrB,GAAG,CAACyB,KAAK,CAAC,KAAK,EAAEtB,MAAM,CAAC;EACpCH,GAAG,CAACe,EAAE,CACJ9B,SAAA,CAAAsB,CAAC,GAAGpB,OAAA,CAAAsB,OAAC,CAACC,OAAO,WAAW,EACxB,MAAMV,GAAG,CAACa,MAAM,CAAC1B,OAAA,CAAAsB,OAAC,CAACC,OAAO,EAAEzB,SAAA,CAAAsB,CAAC,IAAIc,GAAG,GAAG,CAAC,EACxCpC,SAAA,CAAAsB,CAAC,GAAGpB,OAAA,CAAAsB,OAAC,CAACC,OAAO,SAASW,GAAG,GAAG,CAC7B;EACDrB,GAAG,CAACgC,IAAI,CAAC/C,SAAA,CAAAsB,CAAC,GAAGpB,OAAA,CAAAsB,OAAC,CAACK,MAAM,IAAI,CAAC;AAC5B;AAEA,SAASR,YAAYA,CAACP,EAAa,EAAEkC,IAAU;EAC7C,MAAM;IAACjC,GAAG;IAAEkC,YAAY;IAAEC;EAAS,CAAC,GAAGpC,EAAE;EACzC,IAAIoC,SAAS,CAACC,MAAM,EAAE;IACpBpC,GAAG,CAACqC,KAAK,CAACpD,SAAA,CAAAsB,CAAC,OAAOR,EAAE,CAACuC,eAAuB,IAAIL,IAAI,GAAG,CAAC;GACzD,MAAM;IACLjC,GAAG,CAACa,MAAM,CAAC5B,SAAA,CAAAsB,CAAC,GAAG2B,YAAY,SAAS,EAAED,IAAI,CAAC;IAC3CjC,GAAG,CAACuC,MAAM,CAAC,KAAK,CAAC;;AAErB;AAEA,MAAMC,CAAC,GAAG;EACRjD,OAAO,EAAE,IAAIN,SAAA,CAAAwD,IAAI,CAAC,SAAS,CAAC;EAC5BC,UAAU,EAAE,IAAIzD,SAAA,CAAAwD,IAAI,CAAC,YAAY,CAAC;EAClCE,MAAM,EAAE,IAAI1D,SAAA,CAAAwD,IAAI,CAAC,QAAQ,CAAC;EAC1BG,YAAY,EAAE,IAAI3D,SAAA,CAAAwD,IAAI,CAAC,cAAc,CAAC;EACtCnD,OAAO,EAAE,IAAIL,SAAA,CAAAwD,IAAI,CAAC,SAAS,CAAC;EAC5BI,MAAM,EAAE,IAAI5D,SAAA,CAAAwD,IAAI,CAAC,QAAQ,CAAC;EAC1BK,YAAY,EAAE,IAAI7D,SAAA,CAAAwD,IAAI,CAAC,cAAc,CAAC;EACtC;EACAM,YAAY,EAAE,IAAI9D,SAAA,CAAAwD,IAAI,CAAC,cAAc;CACtC;AAED,SAASrC,eAAeA,CAACR,GAAoB,EAAEC,KAA6B;EAC1E,MAAM;IAACmD,YAAY;IAAElB;EAAI,CAAC,GAAGlC,GAAG,CAACG,EAAE;EACnC,IAAIiD,YAAY,KAAK,KAAK,EAAE,OAAO/D,SAAA,CAAAsB,CAAC,IAAI;EACxC,OAAO,CAACuB,IAAI,CAACmB,GAAG,IAAI,CAACnB,IAAI,CAACoB,SAAS,GAAGC,cAAc,GAAGC,cAAc,EAAExD,GAAG,EAAEC,KAAK,CAAC;AACpF;AAEA,SAASsD,cAAcA,CAACvD,GAAoB,EAAE;EAACN;AAAO,CAAyB;EAC7E,MAAM;IAACU,GAAG;IAAET,OAAO;IAAEQ;EAAE,CAAC,GAAGH,GAAG;EAC9B,MAAM;IAACgC,SAAS;IAAEC,aAAa;IAAEC;EAAI,CAAC,GAAG/B,EAAE;EAC3C,MAAMsD,SAAS,GAAgC,CAC7C,CAACb,CAAC,CAACO,YAAY,EAAE9D,SAAA,CAAAyC,SAAS,CAACvC,OAAA,CAAAsB,OAAC,CAACkB,QAAQ,EAAEC,SAAS,CAAC,CAAC,EAClD,CAACY,CAAC,CAACE,UAAU,EAAEzD,SAAA,CAAAO,GAAG,GAAGqC,aAAa,IAAItC,OAAO,EAAE,CAAC,CACjD;EACD,IAAIuC,IAAI,CAACwB,QAAQ,EAAE;IACjBD,SAAS,CAACE,IAAI,CAAC,CAACf,CAAC,CAAClD,OAAO,EAAE,OAAOA,OAAO,IAAI,UAAU,GAAGA,OAAO,CAACM,GAAG,CAAC,GAAGN,OAAO,CAAC,CAAC;;EAEpF,OAAOU,GAAG,CAACwD,MAAM,CAAC,GAAGH,SAAS,CAAC;AACjC;AAEA,SAASD,cAAcA,CAACxD,GAAoB,EAAEC,KAA6B;EACzE,MAAM;IAACG,GAAG;IAAET,OAAO;IAAE2B,IAAI;IAAED,WAAW;IAAElB;EAAE,CAAC,GAAGH,GAAG;EACjD,MAAM;IAAC6D,YAAY;IAAEf,UAAU;IAAEd,SAAS;IAAEC,aAAa;IAAEe,YAAY;IAAEd;EAAI,CAAC,GAAG/B,EAAE;EACnF,MAAM;IAAC4C,MAAM;IAAErD;EAAO,CAAC,GAAGO,KAAK;EAC/B,MAAMwD,SAAS,GAAgC,CAC7C,CAACb,CAAC,CAACjD,OAAO,EAAEA,OAAO,CAAC,EACpB,CAACJ,OAAA,CAAAsB,OAAC,CAACkB,QAAQ,EAAE1C,SAAA,CAAAyC,SAAS,CAACvC,OAAA,CAAAsB,OAAC,CAACkB,QAAQ,EAAEC,SAAS,CAAC,CAAC,EAC9C,CAACY,CAAC,CAACE,UAAU,EAAEzD,SAAA,CAAAO,GAAG,GAAGqC,aAAa,IAAItC,OAAO,EAAE,CAAC,EAChD,CAACiD,CAAC,CAACG,MAAM,EAAE,OAAOA,MAAM,IAAI,UAAU,GAAGA,MAAM,CAAC/C,GAAG,CAAC,GAAG+C,MAAM,IAAI1D,SAAA,CAAAsB,CAAC,IAAI,CAAC,CACxE;EACD,IAAIqC,YAAY,EAAES,SAAS,CAACE,IAAI,CAAC,CAACf,CAAC,CAACI,YAAY,EAAEA,YAAY,CAAC,CAAC;EAChE,IAAId,IAAI,CAACwB,QAAQ,EAAE;IACjBD,SAAS,CAACE,IAAI,CAAC,CAACf,CAAC,CAAClD,OAAO,EAAE,OAAOA,OAAO,IAAI,UAAU,GAAGA,OAAO,CAACM,GAAG,CAAC,GAAGN,OAAO,CAAC,CAAC;;EAEpF,IAAIwC,IAAI,CAACC,OAAO,EAAE;IAChBsB,SAAS,CAACE,IAAI,CACZ,CAACf,CAAC,CAACK,MAAM,EAAE5B,WAAW,CAAC,EACvB,CAACuB,CAAC,CAACM,YAAY,EAAE7D,SAAA,CAAAsB,CAAC,GAAGkD,YAAY,GAAGf,UAAU,EAAE,CAAC,EACjD,CAACvD,OAAA,CAAAsB,OAAC,CAACS,IAAI,EAAEA,IAAI,CAAC,CACf;;EAEH,OAAOlB,GAAG,CAACwD,MAAM,CAAC,GAAGH,SAAS,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}