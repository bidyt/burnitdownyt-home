{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst subschema_1 = require(\"../compile/subschema\");\nconst names_1 = require(\"../compile/names\");\nfunction checkReportMissingProp(cxt, prop) {\n  const {\n    gen,\n    data,\n    it\n  } = cxt;\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({\n      missingProperty: codegen_1._`${prop}`\n    }, true);\n    cxt.error();\n  });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({\n  gen,\n  data,\n  it: {\n    opts\n  }\n}, properties, missing) {\n  return codegen_1.or(...properties.map(prop => codegen_1.and(noPropertyInData(gen, data, prop, opts.ownProperties), codegen_1._`${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n  cxt.setParams({\n    missingProperty: missing\n  }, true);\n  cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: codegen_1._`Object.prototype.hasOwnProperty`\n  });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n  return codegen_1._`${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n  const cond = codegen_1._`${data}${codegen_1.getProperty(property)} !== undefined`;\n  return ownProperties ? codegen_1._`${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n  const cond = codegen_1._`${data}${codegen_1.getProperty(property)} === undefined`;\n  return ownProperties ? codegen_1.or(cond, codegen_1.not(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n  return schemaMap ? Object.keys(schemaMap).filter(p => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n  return allSchemaProperties(schemaMap).filter(p => !util_1.alwaysValidSchema(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({\n  schemaCode,\n  data,\n  it: {\n    gen,\n    topSchemaRef,\n    schemaPath,\n    errorPath\n  },\n  it\n}, func, context, passSchema) {\n  const dataAndSchema = passSchema ? codegen_1._`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n  const valCxt = [[names_1.default.dataPath, codegen_1.strConcat(names_1.default.dataPath, errorPath)], [names_1.default.parentData, it.parentData], [names_1.default.parentDataProperty, it.parentDataProperty], [names_1.default.rootData, names_1.default.rootData]];\n  if (it.opts.dynamicRef) valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n  const args = codegen_1._`${dataAndSchema}, ${gen.object(...valCxt)}`;\n  return context !== codegen_1.nil ? codegen_1._`${func}.call(${context}, ${args})` : codegen_1._`${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nfunction usePattern(gen, pattern) {\n  return gen.scopeValue(\"pattern\", {\n    key: pattern,\n    ref: new RegExp(pattern, \"u\"),\n    code: codegen_1._`new RegExp(${pattern}, \"u\")`\n  });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n  const {\n    gen,\n    data,\n    keyword,\n    it\n  } = cxt;\n  const valid = gen.name(\"valid\");\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true);\n    validateItems(() => gen.assign(validArr, false));\n    return validArr;\n  }\n  gen.var(valid, true);\n  validateItems(() => gen.break());\n  return valid;\n  function validateItems(notValid) {\n    const len = gen.const(\"len\", codegen_1._`${data}.length`);\n    gen.forRange(\"i\", 0, len, i => {\n      cxt.subschema({\n        keyword,\n        dataProp: i,\n        dataPropType: subschema_1.Type.Num\n      }, valid);\n      gen.if(codegen_1.not(valid), notValid);\n    });\n  }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n  const {\n    gen,\n    schema,\n    keyword,\n    it\n  } = cxt;\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\");\n  const alwaysValid = schema.some(sch => util_1.alwaysValidSchema(it, sch));\n  if (alwaysValid && !it.opts.unevaluated) return;\n  const valid = gen.let(\"valid\", false);\n  const schValid = gen.name(\"_valid\");\n  gen.block(() => schema.forEach((_sch, i) => {\n    const schCxt = cxt.subschema({\n      keyword,\n      schemaProp: i,\n      compositeRule: true\n    }, schValid);\n    gen.assign(valid, codegen_1._`${valid} || ${schValid}`);\n    const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n    // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n    // or if all properties and items were evaluated (it.props === true && it.items === true)\n    if (!merged) gen.if(codegen_1.not(valid));\n  }));\n  cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;","map":{"version":3,"names":["codegen_1","require","util_1","subschema_1","names_1","checkReportMissingProp","cxt","prop","gen","data","it","if","noPropertyInData","opts","ownProperties","setParams","missingProperty","_","error","exports","checkMissingProp","properties","missing","or","map","and","reportMissingProp","hasPropFunc","scopeValue","ref","Object","prototype","hasOwnProperty","code","isOwnProperty","property","propertyInData","cond","getProperty","not","allSchemaProperties","schemaMap","keys","filter","p","schemaProperties","alwaysValidSchema","callValidateCode","schemaCode","topSchemaRef","schemaPath","errorPath","func","context","passSchema","dataAndSchema","valCxt","default","dataPath","strConcat","parentData","parentDataProperty","rootData","dynamicRef","push","dynamicAnchors","args","object","nil","usePattern","pattern","key","RegExp","validateArray","keyword","valid","name","allErrors","validArr","let","validateItems","assign","var","break","notValid","len","const","forRange","i","subschema","dataProp","dataPropType","Type","Num","validateUnion","schema","Array","isArray","Error","alwaysValid","some","sch","unevaluated","schValid","block","forEach","_sch","schCxt","schemaProp","compositeRule","merged","mergeValidEvaluated","result","reset"],"sources":["C:\\Users\\obaid\\Work Projects\\BID\\node_modules\\ajv\\lib\\vocabularies\\code.ts"],"sourcesContent":["import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type KeywordCxt from \"../compile/context\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema} from \"../compile/util\"\nimport {Type} from \"../compile/subschema\"\nimport N from \"../compile/names\"\n\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.dataPath, strConcat(N.dataPath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nexport function usePattern(gen: CodeGen, pattern: string): Name {\n  return gen.scopeValue(\"pattern\", {\n    key: pattern,\n    ref: new RegExp(pattern, \"u\"),\n    code: _`new RegExp(${pattern}, \"u\")`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}